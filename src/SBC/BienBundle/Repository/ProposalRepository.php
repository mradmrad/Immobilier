<?php

namespace SBC\BienBundle\Repository;

/**
 * ProposalRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProposalRepository extends \Doctrine\ORM\EntityRepository
{
    public function findAll()
    {

        $query = $this->createQueryBuilder('p')
            ->leftJoin('p.mandat', 'mandat')
            ->addSelect('mandat')
            ->leftJoin('mandat.acquisition', 'acquisition')
            ->addSelect('acquisition')
            ->leftJoin('acquisition.bien', 'b')
            ->addSelect('b')
            ->leftJoin('b.agency', 'ag')
            ->addSelect('ag')
            ->leftJoin('b.createdBy', 'c')
            ->addSelect('c')
            ->leftJoin('b.equipements', 'e')
            ->addSelect('e')
            ->leftJoin('b.owner', 'o')
            ->addSelect('o')
            ->leftJoin('b.pictures', 'pictures')
            ->addSelect('pictures')
            ->leftJoin('b.typeBien', 't')
            ->addSelect('t')
            ->leftJoin('t.category', 'categ')
            ->addSelect('categ')
            ->leftJoin('b.commodites', 'com')
            ->addSelect('com')
            ->orderBy('p.creationDate','DESC')

            ->getQuery();

        return $query->getResult();
    }

    public function find($id, $lockMode = null, $lockVersion = null)
    {

        $query = $this->createQueryBuilder('p')
            ->leftJoin('p.mandat', 'mandat')
            ->addSelect('mandat')
            ->leftJoin('mandat.acquisition', 'acquisition')
            ->addSelect('acquisition')
            ->leftJoin('acquisition.bien', 'b')
            ->addSelect('b')
            ->leftJoin('b.agency', 'ag')
            ->addSelect('ag')
            ->leftJoin('b.createdBy', 'c')
            ->addSelect('c')
            ->leftJoin('b.equipements', 'e')
            ->addSelect('e')
            ->leftJoin('b.owner', 'o')
            ->addSelect('o')
            ->leftJoin('b.pictures', 'pictures')
            ->addSelect('pictures')
            ->where('p.id = ?1')
            ->getQuery();
        $query->setParameters(array(1 => $id));

        return $query->getOneOrNullResult();
    }
}
