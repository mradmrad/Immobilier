{% extends "::layout.html.twig" %}
{% block css %}
    {% stylesheets output="css/compiled/mainWithTree.css" filter="cssrewrite"
    'bundles/immobilier/assets/skins/jquery.fancytree/ui.fancytree.min.css' %}
    <link rel="stylesheet" type="text/css" media="screen" href="{{ asset_url }}"/>
    {% endstylesheets %}
    {{ parent() }}
{% endblock %}
{% block title %}
    Liste des types des rues - {{ parent() }}
{% endblock %}
{% block body %}
    <div id="page_heading" data-uk-sticky="{ top: 48, media: 960 }">
        <ul id="breadcrumbs" style="float: right;">
            <li><a href="#">Rues</a></li>
            <li><span>Afficher toutes les rues</span></li>
        </ul>
        <h1>Liste de toutes les rues</h1>
        <span class="uk-text-muted uk-text-upper uk-text-small">Rues</span>
    </div>
    <div id="page_content_inner">
        <div class="uk-grid" data-uk-grid-margin>
            <div class="uk-width-medium-2-5">
                <div class="md-card">
                    <select data-md-selectize data-md-bottom id="gouvernorats" onchange="getVillesForTree()">
                        <option value="">Cliquez ici ...</option>  <!-- Placeholder -->
                        {% for gov in gouvernorats %}
                            <option value="{{ gov.id }}">{{ gov.name }}</option>
                        {% endfor %}
                    </select>
                    <div class="md-card-content" id="tree">
                        Choisissez un gouvernorat ...
                    </div>
                </div>
            </div>
            <div class="uk-width-medium-3-5">
                <div class="md-card uk-margin-medium-bottom">
                    <div class="md-card-content">
                        <div class="uk-grid">
                            <div class="uk-width-8-10">
                                <div class="uk-form-row">
                                    <div class="parsley-row">
                                        <div class="uk-input-group" style="width: 100%">
                                            {#<span class="uk-input-group-addon">#}
                                            {##}
                                            {#</span>#}
                                            <span class="uk-form-help-block">Gouvernorat<i
                                                        class="material-icons">&#xE55E;</i></span>
                                            <select placeholder="Choisir une gouvenrnorat"
                                                    id="gouvernorat"
                                                    data-md-selectize data-md-selectize-bottom
                                                    onchange="getVilles(this)">


                                                {% for gouvernorat in gouvernorats %}
                                                    <option value="{{ gouvernorat.id }}"> {{ gouvernorat.name }}</option>
                                                {% endfor %}
                                            </select>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="uk-width-2-10">
                                <div class="uk-form-row">
                                    <div class="parsley-row" style="padding-top: 22px;">
                                        <a hidden id="modifierGouvernorat"
                                           title="Modifier la gouvernorat"
                                           data-uk-modal="{target:'#modal-modifierGouvernorat'}">
                                            <i class="material-icons md-24">&#xE254;</i>
                                        </a>
                                        <a hidden id="supprimerGouvernorat"
                                           title="Supprimer la gouvernorat"
                                           data-uk-modal="{target:'#modal-supprimerGouvernorat'}"
                                           onclick="UIkit.modal.confirm('Voulez vous vraiment supprimer cette gouvernorat ?',
                                                            function(){ supprimerGouvernorat($('#gouvernorat').val());});">
                                            <i class="material-icons md-24">&#xE872;</i>
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="uk-grid">
                            <div class="uk-width-8-10">
                                <div class="uk-form-row">
                                    <div class="parsley-row">
                                        <div class="uk-input-group" style="width:100%;">
                                            {#<span class="uk-input-group-addon">#}

                                            {#</span>#}
                                            <span class="uk-form-help-block">Ville<i class="material-icons">
                                                    &#xE55F;</i></span>
                                            <select placeholder="Choisir une ville" id="ville"
                                                    data-md-selectize
                                                    data-md-selectize-bottom
                                                    onchange="getLocalites(this)">

                                            </select>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="uk-width-2-10">
                                <div class="uk-form-row">
                                    <div class="parsley-row" style="padding-top: 22px;">
                                        <a hidden id="ajouterVille" title="Ajouter une ville"
                                           data-uk-modal="{target:'#modal-ajouterVille'}">
                                            <i class="material-icons md-24">&#xE146;</i>
                                        </a>
                                        <a hidden id="modifierVille" title="Modifier la ville"
                                           data-uk-modal="{target:'#modal-modifierVille'}">
                                            <i class="material-icons md-24">&#xE254;</i>
                                        </a>
                                        <a hidden id="supprimerVille" title="Supprimer la ville"
                                           data-uk-modal="{target:'#modal-supprimerVille'}"
                                           onclick="UIkit.modal.confirm('Voulez vous vraiment supprimer cette ville ?',
                                                                    function(){ supprimerVille($('#ville').val());});">
                                            <i class="material-icons md-24">&#xE872;</i>
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="uk-grid">
                            <div class="uk-width-8-10">
                                <div class="uk-form-row">
                                    <div class="parsley-row">
                                        <div class="uk-input-group" style="width: 100%">
                                            {#<span class="uk-input-group-addon">#}

                                            {#</span>#}
                                            <span class="uk-form-help-block">Localité<i
                                                        class="material-icons">&#xE569;</i></span>
                                            <select placeholder="Choisir une localité" id="localite"
                                                    data-md-selectize data-md-selectize-bottom
                                                    onchange="getRues(this)">

                                            </select>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="uk-width-2-10">
                                <div class="uk-form-row">
                                    <div class="parsley-row" style="padding-top: 22px;">
                                        <div class="uk-input-group">
                                            <a hidden id="ajouterLocalite"
                                               title="Ajouter une localité"
                                               data-uk-modal="{target:'#modal-ajouterLocalite'}">
                                                <i class="material-icons md-24">&#xE146;</i>
                                            </a>
                                            <a hidden id="modifierLocalite"
                                               title="Modifier la localité"
                                               data-uk-modal="{target:'#modal-modifierLocalite'}">
                                                <i class="material-icons md-24">&#xE254;</i>
                                            </a>
                                            <a hidden id="supprimerLocalite"
                                               title="Supprimer la localité"
                                               data-uk-modal="{target:'#modal-supprimerLocalite'}"
                                               onclick="UIkit.modal.confirm('Voulez vous vraiment supprimer cette localité ?',
                                                                        function(){ supprimerLocalite($('#localite').val());});">
                                                <i class="material-icons md-24">&#xE872;</i>
                                            </a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="uk-grid">
                            <div class="uk-width-8-10">
                                <div class="uk-form-row">
                                    <div class="parsley-row">
                                        <div class="uk-input-group" style="width:100%;">
                                            {#<span class="uk-input-group-addon">  </span>#}
                                            <span class="uk-form-help-block">Rue<i
                                                        class="material-icons">&#xE566;</i></span>
                                            <select placeholder="Choisir une rue" id="rue"
                                                    name="sbc_geotunisiebundle_adresse_rue"
                                                    data-md-selectize data-md-selectize-bottom
                                                    onchange="getAdresses(this)">

                                            </select>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="uk-width-2-10">
                                <div class="uk-form-row">
                                    <div class="parsley-row" style="padding-top: 22px;">
                                        <div class="uk-input-group">
                                            <a hidden id="ajouterRue" title="Ajouter une rue"
                                               data-uk-modal="{target:'#modal-ajouterRue'}">
                                                <i class="material-icons md-24">&#xE146;</i>
                                            </a>
                                            <a hidden id="modifierRue" title="Modifier la rue"
                                               data-uk-modal="{target:'#modal-modifierRue'}">
                                                <i class="material-icons md-24">&#xE254;</i>
                                            </a>
                                            <a hidden id="supprimerRue" title="Supprimer la rue"
                                               data-uk-modal="{target:'#modal-supprimerRue'}"
                                               onclick="UIkit.modal.confirm('Voulez vous vraiment supprimer cette rue ?',
                                                                    function(){ supprimerRue($('#rue').val());});">
                                                <i class="material-icons md-24">&#xE872;</i>
                                            </a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        {#<div class="uk-grid">#}
                            {#<div class="uk-width-8-10">#}
                                {#<div class="uk-form-row">#}
                                    {#<div class="parsley-row">#}
                                        {#<div class="uk-input-group" style="width:100%;">#}
                                            {#<span class="uk-input-group-addon">#}
                                            {##}
                                            {#</span>#}
                                            {#<span class="uk-form-help-block">Numéro<i#}
                                                        {#class="material-icons">&#xE84F;</i></span>#}
                                            {#{{ form_widget(form.address#}
                                            {#,{'attr': {'data-md-selectize':'', 'data-md-selectize-bottom':''}}) }}#}
                                            {#<span> {{ form_errors(form.address) }} </span>#}
                                        {#</div>#}
                                    {#</div>#}
                                {#</div>#}
                            {#</div>#}
                            {#<div class="uk-width-2-10">#}
                                {#<div class="parsley-row" style="padding-top: 22px;">#}
                                    {#<div class="uk-form-row">#}
                                        {#<div class="uk-input-group">#}
                                            {#<a hidden id="ajouterAdresse"#}
                                               {#title="Ajouter une adresse"#}
                                               {#data-uk-modal="{target:'#modal-ajouterAdresse'}">#}
                                                {#<i class="material-icons md-24">&#xE146;</i>#}
                                            {#</a>#}
                                            {#<a hidden id="modifierAdresse"#}
                                               {#title="Modifier l'adresse"#}
                                               {#data-uk-modal="{target:'#modal-modifierAddresse'}">#}
                                                {#<i class="material-icons md-24">&#xE254;</i>#}
                                            {#</a>#}
                                            {#<a hidden id="supprimerAdresse"#}
                                               {#title="Supprimer l'adresse"#}
                                               {#data-uk-modal="{target:'#modal-supprimerAdresse'}"#}
                                               {#onclick="UIkit.modal.confirm('Voulez vous vraiment supprimer cette adresse ?',#}
                                                                     {#function(){ supprimerAdresse($('#adresse').val());});">#}
                                                {#<i class="material-icons md-24">&#xE872;</i>#}
                                            {#</a>#}
                                        {#</div>#}
                                    {#</div>#}
                                {#</div>#}
                            {#</div>#}
                        {#</div>#}
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="md-fab-wrapper">
        <a class="md-fab md-fab-accent md-fab-wave-light" href="{{ path('rue_add') }}" id="typeBien_add"
           data-uk-tooltip="{cls:'uk-tooltip-small',pos:'left'}" title="Ajouter une rue">
            <i class="material-icons">&#xE145;</i>
        </a>
    </div>
    <div class="uk-modal" id="modal-ajouterLocalite">
        <div class="uk-modal-dialog">
            <button type="button" class="uk-modal-close uk-close"></button>
            <div class="uk-modal-header"><h2>Ajouter une localité</h2></div>
            <form method="POST" name="form_localite" action="#">
                <div class="uk-grid" data-uk-grid-margin>
                    <div class="uk-width-medium-1-2">
                        <div class="parsley-row">
                            <div class="uk-input-group">
                                <span class="uk-input-group-addon">
                                    <i class="material-icons">&#xE55F;</i>
                                </span>
                                <label for="vill"></label>
                                <input id="vill" class="md-input" name="" type="text" value="" readonly/>
                                <input id="villValue" name="villee" type="hidden" value=""/>
                                <span class="uk-form-help-block">Ville</span>
                            </div>
                        </div>
                    </div>
                    <div class="uk-width-medium-1-2">
                        <div class="parsley-row">
                            <div class="uk-input-group">
                                <span class="uk-input-group-addon">
                                    <i class="material-icons">&#xE569;</i>
                                </span>
                                <label for="localiteName">Localité</label>
                                <input id="localiteName" class="md-input" name="localiteName" type="text" value=""
                                       data-parsley-localite="3" required/>
                            </div>
                        </div>
                    </div>
                </div>
            </form>
            <div class="uk-modal-footer uk-text-left">
                <button type="button" class="md-btn md-btn-primary" onclick="newLocalite()">
                    Enregistrer
                </button>
            </div>
        </div>
    </div>
    <div class="uk-modal" id="modal-ajouterRue">
        <div class="uk-modal-dialog">
            <button type="button" class="uk-modal-close uk-close"></button>
            <div class="uk-modal-header"><h2>Ajouter une rue</h2></div>
            <form method="POST" name="form_rue" action="#">
                <div class="uk-grid" data-uk-grid-margin>
                    <div class="uk-width-medium-1-2">
                        <div class="parsley-row">
                            <div class="uk-input-group">
                                <span class="uk-input-group-addon">
                                    <i class="material-icons">&#xE569;</i>
                                </span>
                                <label for="local"></label>
                                <input id="local" class="md-input" name="" type="text" value="" readonly/>
                                <input id="localValue" name="localitee" type="hidden" value=""/>
                                <span class="uk-form-help-block">Localité</span>
                            </div>
                        </div>
                    </div>
                    <div class="uk-width-medium-1-2">
                        <div class="parsley-row">
                            <div class="uk-input-group">
                                <span class="uk-input-group-addon">
                                    <i class="material-icons">&#xE566;</i>
                                </span>
                                <label for="rueName">Rue</label>
                                <input id="rueName" class="md-input" name="rueName" type="text" value=""
                                       data-parsley-rue="3" required/>
                            </div>
                        </div>
                    </div>
                </div>
            </form>
            <div class="uk-modal-footer uk-text-left">
                <button type="button" class="md-btn md-btn-primary" onclick="newRue()">Enregistrer
                </button>
            </div>
        </div>
    </div>
    <div class="uk-modal" id="modal-ajouterAdresse">
        <div class="uk-modal-dialog">
            <button type="button" class="uk-modal-close uk-close"></button>
            <div class="uk-modal-header"><h2>Ajouter un numéro</h2></div>
            <form method="POST" name="form_adresse" action="#">
                <div class="uk-grid" data-uk-grid-margin>
                    <div class="uk-width-medium-1-2">
                        <div class="parsley-row">
                            <div class="uk-input-group">
                                <span class="uk-input-group-addon">
                                    <i class="material-icons">&#xE569;</i>
                                </span>
                                <label for="ru"></label>
                                <input id="ru" class="md-input" name="" type="text" value="" readonly/>
                                <input id="ruValue" name="localitee" type="hidden" value=""/>
                                <span class="uk-form-help-block">Rue</span>
                            </div>
                        </div>
                    </div>
                    <div class="uk-width-medium-1-2">
                        <div class="parsley-row">
                            <div class="uk-input-group">
                                <span class="uk-input-group-addon">
                                    <i class="material-icons">&#xE566;</i>
                                </span>
                                <label for="adresseName">Numéro</label>
                                <input id="adresseName" class="md-input" name="adresseName" type="text" value=""
                                       data-parsley-adresse="3" required/>
                            </div>
                        </div>
                    </div>
                </div>
            </form>
            <div class="uk-modal-footer uk-text-left">
                <button type="button" class="md-btn md-btn-primary" onclick="newAdresse()">Enregistrer
                </button>
            </div>
        </div>
    </div>
    <div class="uk-modal" id="modal-modifierGouvernorat">
        <div class="uk-modal-dialog">
            <button type="button" class="uk-modal-close uk-close"></button>
            <div class="uk-modal-header"><h2>Modifier la gouvernorat</h2></div>
            <form method="POST" name="form_gouvernorat" action="#" class="uk-form-stacked">
                <div class="uk-grid" data-uk-grid-margin>
                    <div class="uk-width-medium-1-2">
                        <div class="parsley-row">
                            <div class="uk-input-group">
                                <span class="uk-input-group-addon">
                                    <i class="material-icons">&#xE55E;</i>
                                </span>
                                <label for="govModif"></label>
                                <input id="govModif" class="md-input" name="" type="text" value=""
                                       data-parsley-govmodif="3" required/>
                                <input id="govValueModif" name="gouvernorattModif" type="hidden" value=""/>
                                <span class="uk-form-help-block">Gouvernorat</span>
                            </div>
                        </div>
                    </div>
                </div>
            </form>
            <div class="uk-modal-footer uk-text-left">
                <button type="button" class="md-btn md-btn-primary" onclick="modifierGouvernorat(this)">
                    Enregistrer
                </button>
            </div>
        </div>
    </div>
    <div class="uk-modal" id="modal-modifierVille">
        <div class="uk-modal-dialog">
            <button type="button" class="uk-modal-close uk-close"></button>
            <div class="uk-modal-header"><h2>Modifier la ville</h2></div>
            <form method="POST" name="form_ville" action="#" class="uk-form-stacked">
                <div class="uk-grid" data-uk-grid-margin>
                    <div class="uk-width-medium-1-2">
                        <div class="parsley-row">
                            <div class="uk-input-group">
                                <span class="uk-input-group-addon">
                                    <i class="material-icons">&#xE55E;</i>
                                </span>
                                <label for="villeModif"></label>
                                <input id="villeModif" class="md-input" name="" type="text" value=""
                                       data-parsley-villemodif="3" required/>
                                <input id="villeValueModif" name="villeModif" type="hidden" value=""/>
                                <span class="uk-form-help-block">Ville</span>
                            </div>
                        </div>
                    </div>
                </div>
            </form>
            <div class="uk-modal-footer uk-text-left">
                <button type="button" class="md-btn md-btn-primary" onclick="modifierVille(this)">
                    Enregistrer
                </button>
            </div>
        </div>
    </div>
    <div class="uk-modal" id="modal-modifierLocalite">
        <div class="uk-modal-dialog">
            <button type="button" class="uk-modal-close uk-close"></button>
            <div class="uk-modal-header"><h2>Modifier la localité</h2></div>
            <form method="POST" name="form_localite" action="#" class="uk-form-stacked">
                <div class="uk-grid" data-uk-grid-margin>
                    <div class="uk-width-medium-1-2">
                        <div class="parsley-row">
                            <div class="uk-input-group">
                                <span class="uk-input-group-addon">
                                    <i class="material-icons">&#xE55E;</i>
                                </span>
                                <label for="localiteModif"></label>
                                <input id="localiteModif" class="md-input" name="" type="text" value=""
                                       data-parsley-localitemodif="3" required/>
                                <input id="localiteValueModif" name="localiteModif" type="hidden" value=""/>
                                <span class="uk-form-help-block">Localité</span>
                            </div>
                        </div>
                    </div>
                </div>
            </form>
            <div class="uk-modal-footer uk-text-left">
                <button type="button" class="md-btn md-btn-primary" onclick="modifierLocalite(this)">
                    Enregistrer
                </button>
            </div>
        </div>
    </div>
    <div class="uk-modal" id="modal-modifierRue">
        <div class="uk-modal-dialog">
            <button type="button" class="uk-modal-close uk-close"></button>
            <div class="uk-modal-header"><h2>Modifier la rue</h2></div>
            <form method="POST" name="form_rue" action="#" class="uk-form-stacked">
                <div class="uk-grid" data-uk-grid-margin>
                    <div class="uk-width-medium-1-2">
                        <div class="parsley-row">
                            <div class="uk-input-group">
                                <span class="uk-input-group-addon">
                                    <i class="material-icons">&#xE55E;</i>
                                </span>
                                <label for="rueModif"></label>
                                <input id="rueModif" class="md-input" name="" type="text" value=""
                                       data-parsley-ruemodif="3" required/>
                                <input id="rueModif" name="rueModif" type="hidden" value=""/>
                                <span class="uk-form-help-block">Rue</span>
                            </div>
                        </div>
                    </div>
                </div>
            </form>
            <div class="uk-modal-footer uk-text-left">
                <button type="button" class="md-btn md-btn-primary" onclick="modifierRue(this)">
                    Enregistrer
                </button>
            </div>
        </div>
    </div>
    <div class="uk-modal" id="modal-modifierAdresse">
        <div class="uk-modal-dialog">
            <button type="button" class="uk-modal-close uk-close"></button>
            <div class="uk-modal-header"><h2>Modifier l'adresse</h2></div>
            <form method="POST" name="form_adresse" action="#" class="uk-form-stacked">
                <div class="uk-grid" data-uk-grid-margin>
                    <div class="uk-width-medium-1-2">
                        <div class="parsley-row">
                            <div class="uk-input-group">
                                <span class="uk-input-group-addon">
                                    <i class="material-icons">&#xE55E;</i>
                                </span>
                                <label for="adresseModif"></label>
                                <input id="adresseModif" class="md-input" name="" type="text" value=""
                                       data-parsley-adressemodif="3" required/>
                                <input id="adresseModif" name="adresseModif" type="hidden" value=""/>
                                <span class="uk-form-help-block">Adresse</span>
                            </div>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
{% endblock %}
{% block js %}
    {{ parent() }}
    {% javascripts output="js/compiled/mainIndexWithTreeAndNumberFormat.js"
    'bundles/immobilier/bower_components/datatables/media/js/jquery.dataTables.min.js'
    'bundles/immobilier/bower_components/datatables-buttons/js/dataTables.buttons.js'
    'bundles/immobilier/assets/js/custom/datatables/buttons.uikit.js'
    'bundles/immobilier/bower_components/jszip/dist/jszip.min.js'
    'bundles/immobilier/bower_components/pdfmake/build/pdfmake.min.js'
    'bundles/immobilier/bower_components/pdfmake/build/vfs_fonts.js'
    'bundles/immobilier/bower_components/datatables-buttons/js/buttons.colVis.js'
    'bundles/immobilier/bower_components/datatables-buttons/js/buttons.html5.js'
    'bundles/immobilier/bower_components/datatables-buttons/js/buttons.print.js'
    'bundles/immobilier/assets/js/custom/datatables/datatables.uikit.min.js'
    'bundles/immobilier/assets/js/pages/plugins_datatables.min.js'
    'bundles/immobilier/bower_components/jquery-ui/jquery-ui.min.js'
    'bundles/immobilier/bower_components/jquery.fancytree/dist/jquery.fancytree-all.min.js'
    'bundles/immobilier/assets/js/pages/plugins_tree.min.js'
    'bundles/immobilier/jQuery-Mask-Plugin/js/jquery.mask.min.js'
    'bundles/immobilier/jquery-numberformatter/jshashtable-2.1.js'
    'bundles/immobilier/jquery-numberformatter/jquery.numberformatter-1.2.4.js' %}
    {#{% javascripts output="js/compiled/mainIndex.js"#}
    {#'bundles/immobilier/bower_components/datatables/media/js/jquery.dataTables.min.js'#}
    {#'bundles/immobilier/bower_components/datatables-buttons/js/dataTables.buttons.js'#}
    {#'bundles/immobilier/assets/js/custom/datatables/buttons.uikit.js'#}
    {#'bundles/immobilier/bower_components/jszip/dist/jszip.min.js'#}
    {#'bundles/immobilier/bower_components/pdfmake/build/pdfmake.min.js'#}
    {#'bundles/immobilier/bower_components/pdfmake/build/vfs_fonts.js'#}
    {#'bundles/immobilier/bower_components/datatables-buttons/js/buttons.colVis.js'#}
    {#'bundles/immobilier/bower_components/datatables-buttons/js/buttons.html5.js'#}
    {#'bundles/immobilier/bower_components/datatables-buttons/js/buttons.print.js'#}
    {#'bundles/immobilier/assets/js/custom/datatables/datatables.uikit.min.js'#}
    {#'bundles/immobilier/assets/js/pages/plugins_datatables.min.js' %}#}
    <script src="{{ asset_url }}"></script>

    <script>
        var ville = $('#ville');
        var localite = $('#localite');
        var rue = $('#rue');
        var gouvernorat = $('#gouvernorat');
        var adresse = $('#sbc_bienbundle_bien_address');
        var gov = $('#gov');
        var local = $('#local');
        var vill = $('#vill');
        var ru = $('#ru');
        var govValue = $('#govValue');
        var localValue = $('#localValue');
        var villValue = $('#villValue');
        var ruValue = $('#ruValue');
        var govValueModif = $('#govValueModif');
        var govModif = $('#govModif');
        var localiteValueModif = $('#localiteValueModif');
        var localiteModif = $('#localiteModif');
        var villeValueModif = $('#villeValueModif');
        var villeModif = $('#villeModif');
        var rueValueModif = $('#rueValueModif');
        var rueModif = $('#rueModif');
        function getVilles(select) {
            var modifierGouvernorat = $('#modifierGouvernorat');
            var supprimerGouvernorat = $('#supprimerGouvernorat');
            var ajouterVille = $('#ajouterVille');
            var modifierVille = $('#modifierVille');
            var supprimerVille = $('#supprimerVille');
            select = select || '#gouvernorat';
            {% if app.user.id == 1 or app.user.id == 2 %}
            modifierGouvernorat.show();
            supprimerGouvernorat.show();
            ajouterVille.show();
            {% endif %}
            validateGouvernorat();
            var gouvernorat = $(select).val();
            govValueModif.val(gouvernorat);
            govModif.val($(select).text());
            gov.val($(select).text());
            govValue.val(gouvernorat);
            var url = '{{ path('villes_bygouvernorat') }}';
            var villes = ville[0].selectize;
            villes.clearOptions();
            modifierVille.hide();
            supprimerVille.hide();
            if (gouvernorat !== '') {
                $.ajax({
                    url: url,
                    type: 'POST',
                    data: 'q=' + gouvernorat,
                    success: function (data) {
                        if (data !== null) {
                            $.each(data, function (key, element) {
                                villes.addOption({
                                    text: element.text,
                                    value: element.value
                                });
                                villes.open();
                            });
                        }
                        else {
                            ville.html("<option>No Data </option>");
                        }
                    },
                    error: function () {
                        ville.html("<option>ERROR 500</option>");
                    }
                });
            }
            else {
                modifierGouvernorat.hide();
                supprimerGouvernorat.hide();
                ajouterVille.hide();
                modifierVille.hide();
                supprimerVille.hide();
                $('#ajouterLocalite').hide();
                $('#modifierLocalite').hide();
                $('#supprimerLocalite').hide();
                $('#ajouterRue').hide();
                $('#modifierRue').hide();
                $('#supprimerRue').hide();
                $('#ajouterAdresse').hide();
                $('#modifierAdresse').hide();
                $('#supprimerAdresse').hide();
            }
        }
        function getLocalites(select) {
            select = select || '#ville';

            var ajouterLocalite = $('#ajouterLocalite');
            var modifierLocalite = $('#modifierLocalite');
            var supprimerLocalite = $('#supprimerLocalite');
            {% if app.user.id == 1 or app.user.id == 2 %}
            ajouterLocalite.show();
            $('#modifierVille').show();
            $('#supprimerVille').show();
            {% endif %}
            validateVille();
            var ville = $(select).val();
            villeValueModif.val(ville);
            villeModif.val($(select).text());
            vill.val($(select).text());
            villValue.val(ville);
            var url = '{{ path('localites_byville') }}';
            var localites = localite[0].selectize;
            localites.clearOptions();
            modifierLocalite.hide();
            supprimerLocalite.hide();
            if (ville !== '') {
                $.ajax({
                    url: url,
                    type: 'POST',
                    data: 'q=' + ville,
                    success: function (data) {
                        if (data !== null) {
                            $.each(data, function (key, element) {
                                localites.addOption({
                                    text: element.text,
                                    value: element.value
                                });
                                localites.open();
                            });
                        }
                        else {
                            localite.html("<option>No Data </option>");
                        }
                    },
                    error: function () {
                        localite.html("<option>ERROR 500</option>");
                    }
                });
            }
            else {
                ajouterLocalite.hide();
                modifierLocalite.hide();
                supprimerLocalite.hide();
                $('#ajouterRue').hide();
                $('#modifierRue').hide();
                $('#supprimerRue').hide();
                $('#ajouterAdresse').hide();
                $('#modifierAdresse').hide();
                $('#supprimerAdresse').hide();
            }
        }
        function getRues(select) {

            select = select || '#localite';

            var ajouterRue = $('#ajouterRue');
            {% if app.user.id == 1 or app.user.id == 2 %}
            ajouterRue.show();
            $('#modifierLocalite').show();
            $('#supprimerLocalite').show();
            {% endif %}
            validateLocalite();
            var localite = $(select).val();
            localiteValueModif.val(localite);
            localiteModif.val($(select).text());
            local.val($(select).text());
            localValue.val(localite);
            var url = '{{ path('rues_bylocalite') }}';
            var rues = rue[0].selectize;
            rues.clearOptions();
            var modifierRue = $('#modifierRue');
            var supprimerRue = $('#supprimerRue');
            modifierRue.hide();
            supprimerRue.hide();
            if (localite !== '') {
                $.ajax({
                    url: url,
                    type: 'POST',
                    data: 'q=' + localite,
                    success: function (data) {
                        if (data !== null) {
                            $.each(data, function (key, element) {
                                rues.addOption({
                                    text: element.text,
                                    value: element.value
                                });
                                rues.open();
                            });
                        }
                        else {
                            rue.html("<option>No Data </option>");
                        }
                    },
                    error: function () {
                        rue.html("<option>ERROR 500</option>");
                    }
                });
            }
            else {
                ajouterRue.hide();
                modifierRue.hide();
                supprimerRue.hide();
                $('#ajouterAdresse').hide();
                $('#modifierAdresse').hide();
                $('#supprimerAdresse').hide();
            }
        }
        function getAdresses(select) {
            select = select || '#rue';
            {% if app.user.id == 1 or app.user.id == 2 %}
            $('#modifierRue').show();
            $('#supprimerRue').show();
            {% endif %}
            var ajouterAdresse = $('#ajouterAdresse');
            ajouterAdresse.show();
            validateRue();
            var rue = $(select).val();
            rueValueModif.val(rue);
            rueModif.val($(select).text());
            ru.val($(select).text());
            ruValue.val(rue);
            var url = '{{ path('adresses_byrue_notjoined') }}';
            var adresses = adresse[0].selectize;
            adresses.clearOptions();
            var modifierAdresse = $('#modifierAdresse');
            var supprimerAdresse = $('#supprimerAdresse');
            modifierAdresse.hide();
            supprimerAdresse.hide();
            if (rue !== '') {
                $.ajax({
                    url: url,
                    type: 'POST',
                    data: 'q=' + rue,
                    success: function (data) {
                        if (data !== null) {
                            $.each(data, function (key, element) {
                                adresses.addOption({
                                    text: element.text,
                                    value: element.value
                                });
                                adresses.open();
                            });
                        }
                        else {
                            adresse.html("<option>No Data </option>");
                        }
                    },
                    error: function () {

                        adresse.html("<option>ERROR 500</option>");
                    }
                });
            }
            else {
                ajouterAdresse.hide();
                modifierAdresse.hide();
                supprimerAdresse.hide();
            }
        }
        function newVille() {
            var villeName = $('#villeName');
            var postCodeName = $('#postCodeName');
            var villeNameIsValid = villeName.parsley().isValid();
            var postCodeIsValid = postCodeName.parsley().isValid();
            if (villeNameIsValid || postCodeIsValid) {
                var url = '{{ path('ville_new') }}';
                $.ajax({
                    async: true,
                    type: "POST",
                    url: url,
                    data: "ville=" + villeName.val() + "&codepostale=" + postCodeName.val() + "&gouvernorat=" + govValue.val(),
                    success: function (json) {
                        if (json.success === false || json.message !== '') {
                            window.Parsley.addValidator('ville', {
                                validateString: function () {
                                    return false;
                                },
                                messages: {
                                    en: 'Cette ville existe déjà.',
                                    fr: "Cette ville existe déjà"
                                }
                            });
                            villeName.on('change', function () {
                                window.Parsley.addValidator('ville', {
                                    validateString: function () {
                                        return true;
                                    }
                                });
                                villeName.parsley().validate();
                            });
                        } else {
                            window.Parsley.addValidator('ville', {
                                validateString: function () {
                                    return true;
                                }
                            });
                            UIkit.modal.alert('La ville a été ajoutée avec succès', {
                                labels: {
                                    Ok: 'Fermer'
                                }
                            });
                            var villes = ville[0].selectize;
                            villes.addOption({
                                text: json.villeName,
                                value: json.id
                            });
                            villes.addItem(json.id);
                        }
                        villeName.parsley().validate();
                    },
                    error: function () {
                        villeName.parsley().validate();
                    }
                });
            }
            else {
                villeName.parsley().validate();
                postCodeName.parsley().validate();
            }
        }
        function newLocalite() {
            var localiteName = $('#localiteName');
            var localiteNameIsValid = localiteName.parsley().isValid();
            if (localiteNameIsValid) {
                var url = '{{ path('localite_new') }}';
                $.ajax({
                    async: true,
                    type: "POST",
                    url: url,
                    data: "localite=" + localiteName.val() + "&ville=" + villValue.val(),
                    success: function (json) {
                        if (json.success === false || json.message !== '') {
                            window.Parsley.addValidator('localite', {
                                validateString: function () {
                                    return false;
                                },
                                messages: {
                                    en: 'Cette localité existe déjà.',
                                    fr: "Cette localité existe déjà"
                                }
                            });
                            localiteName.on('change', function () {
                                window.Parsley.addValidator('localite', {
                                    validateString: function () {
                                        return true;
                                    }
                                });
                                localiteName.parsley().validate();
                            });
                        } else {
                            window.Parsley.addValidator('localite', {
                                validateString: function () {
                                    return true;
                                }
                            });
                            UIkit.modal.alert('La localité a été ajoutée avec succès', {
                                labels: {
                                    Ok: 'Fermer'
                                }
                            });
                            var localites = localite[0].selectize;
                            localites.addOption({
                                text: json.localiteName,
                                value: json.id
                            });
                            localites.addItem(json.id);
                        }
                        localiteName.parsley().validate();
                    },
                    error: function () {
                        localiteName.parsley().validate();
                    }
                });
            }
            else {
                localiteName.parsley().validate();
            }
        }
        function newRue() {
            var rueName = $('#rueName');
//            var rueNameIsValid = rueName.parsley().isValid();
//            if (rueNameIsValid) {
                var url = '{{ path('rue_new') }}';
                $.ajax({
                    async: true,
                    type: "POST",
                    url: url,
                    data: "rue=" + rueName.val() + "&localite=" + localValue.val(),
                    success: function (json) {


                            UIkit.modal.alert('La rue a été ajoutée avec succès', {
                                labels: {
                                    Ok: 'Fermer'
                                }
                            });
                            var rues = rue[0].selectize;
                            rues.addOption({
                                text: json.rueName,
                                value: json.id
                            });
                            rues.addItem(json.id);

                    },
                    error: function () {
                        UIkit.modal.alert('Une erreur est survenue', {
                            labels: {
                                Ok: 'Fermer'
                            }
                        });
                    }
                });

//            else {
//                rueName.parsley().validate();
//            }
        }
        function newAdresse() {
            var adresseName = $('#adresseName');
            var adresseValide = adresseName.parsley().isValid();
            var rueVal = $('#rue').val();
            if (adresseValide) {
                var adresseNameValue = adresseName.val();
                var urlVerif = '{{ path('adresse_bynameandrue', {'name': 'namE', 'rue': 'ruE'}) }}';
                urlVerif = urlVerif.replace('namE', adresseNameValue);
                urlVerif = urlVerif.replace('ruE', rueVal);
                $.ajax({
                    async: true,
                    type: "GET",
                    url: urlVerif,
                    success: function (json) {
                        if (json.success === true) {
                            window.Parsley.addValidator('adresse', {
                                validateString: function () {
                                    return false;
                                },
                                messages: {
                                    en: 'Cette adresse existe déjà.',
                                    fr: "Cette adresse existe déjà"
                                }
                            });
                            adresseName.on('change', function () {
                                window.Parsley.addValidator('adresse', {
                                    validateString: function () {
                                        return true;
                                    }
                                });
                                adresseName.parsley().validate();
                            });

                        } else {
                            window.Parsley.addValidator('adresse', {
                                validateString: function () {
                                    return true;
                                }
                            });
                            var url = '{{ path('adresse_add') }}';
                            $.ajax({
                                async: true,
                                type: "POST",
                                url: url,
                                data: "adresse=" + adresseNameValue + "&rue=" + rueVal,
                                success: function (json) {
                                    if (json.success === false || json.message !== '') {
                                        window.Parsley.addValidator('adresse', {
                                            validateString: function () {
                                                return false;
                                            },
                                            messages: {
                                                en: 'Erreur d\'ajout de l\'adresse.',
                                                fr: "Erreur d\'ajout de l\'adresse."
                                            }
                                        });
                                        adresseName.on('change', function () {
                                            window.Parsley.addValidator('adresse', {
                                                validateString: function () {
                                                    return true;
                                                }
                                            });
                                            adresseName.parsley().validate();
                                        });
                                    } else {
                                        window.Parsley.addValidator('adresse', {
                                            validateString: function () {
                                                return true;
                                            }
                                        });
                                        UIkit.modal.alert('L\'adresse a été ajoutée avec succès', {
                                            labels: {
                                                Ok: 'Fermer'
                                            }
                                        });
                                        var adresses = adresse[0].selectize;
                                        adresses.addOption({
                                            text: json.adresseName,
                                            value: json.id
                                        });
                                        adresses.addItem(json.id);
                                    }
                                    adresseName.parsley().validate();
                                },
                                error: function () {
                                    adresseName.parsley().validate();
                                }
                            });
                        }
                        adresseName.parsley().validate();
                    }
                });
            }
            else {
                adresseName.parsley().validate();
            }
        }
        function modifierVille() {
            var villeId = $('#villeValueModif').val();
            var villeModifName = $('#villeModif');
            var villeModifValide = villeModifName.parsley().isValid();
            if (villeModifValide) {
                var name = villeModifName.val();
                var urlVerif = '{{ path('ville_edit', {'id': 'iD'}) }}';
                urlVerif = urlVerif.replace('iD', villeId);
                $.ajax({
                    async: true,
                    type: "POST",
                    url: urlVerif,
                    data: "newname=" + name,
                    success: function (json) {
                        if (json.success === false) {
                            window.Parsley.addValidator('villemodif', {
                                validateString: function () {
                                    return false;
                                },
                                messages: {
                                    en: 'Erreur de modifiacation de la ville.',
                                    fr: "Erreur de modification de la ville."
                                }
                            });
                            villeModifName.on('change', function () {
                                window.Parsley.addValidator('villemodif', {
                                    validateString: function () {
                                        return true;
                                    }
                                });
                                villeModifName.parsley().validate();
                            });
                        } else {
                            window.Parsley.addValidator('villemodif', {
                                validateString: function () {
                                    return true;
                                }
                            });
                            UIkit.modal.alert('La ville a été modifiée avec succès', {
                                labels: {
                                    Ok: 'Fermer'
                                }
                            });
                        }
                        villeModifName.parsley().validate();
                        refreshVilles($('#ville'));
                    },
                    error: function () {

                        villeModifName.parsley().validate();
                    }
                });
            }
            else {
                villeModifName.parsley().validate();
            }
        }
        function validateVille() {
            var domVilleModif = $('#villeModif');
            var oldVilleName = domVilleModif.val().toUpperCase();
            domVilleModif.on('change', function () {
                var villename = domVilleModif.val().toUpperCase();
                var url = '{{ path('ville_byname', {'name': 'namE'}) }}';
                url = url.replace('namE', villename);
                if (villename !== oldVilleName) {
                    $.ajax({
                        async: true,
                        type: "POST",
                        url: url,
                        success: function (json) {
                            if (json.success) {
                                window.Parsley.addValidator('villemodif', {
                                    validateString: function () {
                                        return false;
                                    },
                                    messages: {
                                        en: 'Cette ville existe déjà',
                                        fr: "Cete ville existe déjà"
                                    }
                                });
                            } else {
                                window.Parsley.addValidator('villemodif', {
                                    validateString: function () {
                                        return true;
                                    }
                                });
                            }
                            domVilleModif.parsley().validate();
                        }
                    });
                }
            });
        }
        function refreshVilles(select) {
            var url = '{{ path('ville_list') }}';
            var villes = select[0].selectize;
            villes.clearOptions();
            $.ajax({
                url: url,
                type: 'POST',
                success: function (data) {
                    if (data !== null) {
                        $.each(data, function (key, element) {
                            villes.addOption({
                                text: element.text,
                                value: element.value
                            });
                        });
                    }
                    else {
                        select.html("<option>No Data </option>");
                    }
                },
                error: function () {
                    select.html("<option>ERROR 500</option>");
                }
            });
        }
        function supprimerVille($id) {
            var url = '{{ path('ville_delete', {'id': 'iD'}) }}';
            url = url.replace('iD', $id);
            $.ajax({
                url: url,
                type: 'DELETE',
                success: function (json) {
                    if (json.success) {
                        UIkit.modal.alert('La ville a été supprimée avec succès.', {
                                    labels: {
                                        Ok: 'Fermer'
                                    }
                                }
                        ).on('hide.uk.modal', function () {
                            refreshVilles($('#ville'));
                        });
                    }
                    else {
                        UIkit.modal.alert('Vous n\'avez pas le droit de supprimer cette ville pour des raisons de sécurité', {
                            labels: {
                                Ok: 'Fermer'
                            }
                        });
                    }
                },
                error: function () {
                    UIkit.modal.alert('Vous n\'avez pas le droit de supprimer cette ville pour des raisons de sécurité', {
                        labels: {
                            Ok: 'Fermer'
                        }
                    });
                }
            });
        }
        function modifierGouvernorat() {
            var govId = $('#govValueModif').val();
            var govModifName = $('#govModif');
            var govModifValide = govModifName.parsley().isValid();
            if (govModifValide) {
                var name = govModifName.val();
                var urlVerif = '{{ path('gouvernorat_edit', {'id': 'iD'}) }}';
                urlVerif = urlVerif.replace('iD', govId);
                $.ajax({
                    async: true,
                    type: "POST",
                    url: urlVerif,
                    data: "newname=" + name,
                    success: function (json) {
                        if (json.success === false) {
                            window.Parsley.addValidator('govmodif', {
                                validateString: function () {
                                    return false;
                                },
                                messages: {
                                    en: 'Erreur de modifiacation de la gouvernorat.',
                                    fr: "Erreur de modification de la gouvernorat."
                                }
                            });
                            govModifName.on('change', function () {
                                window.Parsley.addValidator('govmodif', {
                                    validateString: function () {
                                        return true;
                                    }
                                });
                                govModifName.parsley().validate();
                            });
                        } else {
                            window.Parsley.addValidator('govmodif', {
                                validateString: function () {
                                    return true;
                                }
                            });
                            UIkit.modal.alert('La gouvernorat a été modifiée avec succès', {
                                labels: {
                                    Ok: 'Fermer'
                                }
                            });
                        }
                        govModifName.parsley().validate();
                        refreshGouvernorats($('#gouvernorat'));
                    },
                    error: function () {
                        govModifName.parsley().validate();
                    }
                });
            }
            else {
                govModifName.parsley().validate();
            }
        }
        function validateGouvernorat() {
            var domGovModif = $('#govModif');
            var oldGovName = domGovModif.val().toUpperCase();
            domGovModif.on('change', function () {
                var govname = domGovModif.val().toUpperCase();
                var url = '{{ path('gouvernorat_byname', {'name': 'namE'}) }}';
                url = url.replace('namE', govname);
                if (govname !== oldGovName) {
                    $.ajax({
                        async: true,
                        type: "POST",
                        url: url,
                        success: function (json) {
                            if (json.success) {
                                window.Parsley.addValidator('govmodif', {
                                    validateString: function () {
                                        return false;
                                    },
                                    messages: {
                                        en: 'Cette gouvenorat existe déjà',
                                        fr: "Cete gouvenorat existe déjà"
                                    }
                                });
                            } else {
                                window.Parsley.addValidator('govmodif', {
                                    validateString: function () {
                                        return true;
                                    }
                                });
                            }
                            domGovModif.parsley().validate();
                        }
                    });
                }
            });
        }
        function refreshGouvernorats(select) {
            var url = '{{ path('gouvernorat_list') }}';
            var gouvernorats = select[0].selectize;
            gouvernorats.clearOptions();
            $.ajax({
                url: url,
                type: 'POST',
                success: function (data) {
                    if (data !== null) {

                        $.each(data, function (key, element) {
                            gouvernorats.addOption({
                                text: element.text,
                                value: element.value
                            });
                        });
                    }
                    else {
                        select.html("<option>No Data </option>");
                    }
                },
                error: function () {
                    select.html("<option>ERROR 500</option>");
                }
            });
        }
        function supprimerGouvernorat(id) {
            var url = '{{ path('gouvernorat_delete', {'id': 'iD'}) }}';
            url = url.replace('iD', id);
            $.ajax({
                url: url,
                type: 'DELETE',
                success: function (json) {
                    if (json.success) {
                        UIkit.modal.alert('La gouvernorat a été supprimée avec succès.'
                        ).on('hide.uk.modal', function () {
                            refreshGouvernorats($('#gouvernorat'));
                        });
                    }
                    else {
                        UIkit.modal.alert('Vous n\'avez pas le droit de supprimer cette gouvernorat pour des raisons de sécurité', {
                            labels: {
                                Ok: 'Fermer'
                            }
                        });
                    }
                },
                error: function () {
                    UIkit.modal.alert('Vous n\'avez pas le droit de supprimer cette gouvernorat pour des raisons de sécurité', {
                        labels: {
                            Ok: 'Fermer'
                        }
                    });
                }
            });
        }
        function modifierLocalite() {
            var localiteId = $('#localiteValueModif').val();
            var localiteModifName = $('#localiteModif');
            var localiteModifValide = localiteModifName.parsley().isValid();
            if (localiteModifValide) {
                var name = localiteModifName.val();
                var urlVerif = '{{ path('localite_edit', {'id': 'iD'}) }}';
                urlVerif = urlVerif.replace('iD', localiteId);
                $.ajax({
                    async: true,
                    type: "POST",
                    url: urlVerif,
                    data: "newname=" + name,
                    success: function (json) {
                        if (json.success === false) {
                            window.Parsley.addValidator('localitemodif', {
                                validateString: function () {
                                    return false;
                                },
                                messages: {
                                    en: 'Erreur de modification de la localité.',
                                    fr: "Erreur de modification de la localité."
                                }
                            });
                            localiteModifName.on('change', function () {
                                window.Parsley.addValidator('localitemodif', {
                                    validateString: function () {
                                        return true;
                                    }
                                });
                                localiteModifName.parsley().validate();
                            });

                        } else {
                            window.Parsley.addValidator('localitemodif', {
                                validateString: function () {
                                    return true;
                                }
                            });
                            UIkit.modal.alert('La localité a été modifiée avec succès', {
                                labels: {
                                    Ok: 'Fermer'
                                }
                            });
                        }
                        localiteModifName.parsley().validate();
                        refreshGouvernorats($('#gouvernorat'));
                    },
                    error: function () {
                        localiteModifName.parsley().validate();
                    }
                });
            }
            else {
                localiteModifName.parsley().validate();
            }
        }
        function validateLocalite() {
            var domlocaliteModif = $('#localiteModif');
            var oldlocaliteName = domlocaliteModif.val().toUpperCase();
            domlocaliteModif.on('change', function () {
                var localitename = domlocaliteModif.val().toUpperCase();
                var url = '{{ path('localite_byname', {'name': 'namE'}) }}';
                url = url.replace('namE', localitename);
                if (localitename !== oldlocaliteName) {
                    $.ajax({
                        async: true,
                        type: "POST",
                        url: url,
                        success: function (json) {
                            if (json.success) {
                                window.Parsley.addValidator('localitemodif', {
                                    validateString: function () {
                                        return false;
                                    },
                                    messages: {
                                        en: 'Cette localité existe déjà',
                                        fr: "Cette localité existe déjà"
                                    }
                                });
                            } else {
                                window.Parsley.addValidator('localitemodif', {
                                    validateString: function () {
                                        return true;
                                    }
                                });
                            }
                            domlocaliteModif.parsley().validate();
                        }
                    });
                }
            });
        }
        function refreshLocalites(select) {
            var url = '{{ path('localite_list') }}';
            var localites = select[0].selectize;
            localites.clearOptions();
            $.ajax({
                url: url,
                type: 'POST',
                success: function (data) {
                    if (data !== null) {
                        $.each(data, function (key, element) {
                            localites.addOption({
                                text: element.text,
                                value: element.value
                            });
                        });
                    }
                    else {
                        select.html("<option>No Data </option>");
                    }
                },
                error: function () {
                    select.html("<option>ERROR 500</option>");
                }
            });
        }
        function supprimerLocalite(id) {
            var url = '{{ path('localite_delete', {'id': 'iD'}) }}';
            url = url.replace('iD', id);
            $.ajax({
                url: url,
                type: 'DELETE',
                success: function (json) {
                    if (json.success) {
                        UIkit.modal.alert('La localité a été supprimée avec succès.', {
                                    labels: {
                                        Ok: 'Fermer'
                                    }
                                }
                        ).on('hide.uk.modal', function () {
                            refreshLocalites($('#localite'));
                        });
                    }
                    else {
                        UIkit.modal.alert('Vous n\'avez pas le droit de supprimer cette localité pour des raisons de sécurité', {
                            labels: {
                                Ok: 'Fermer'
                            }
                        });
                    }
                },
                error: function () {
                    UIkit.modal.alert('Vous n\'avez pas le droit de supprimer cette localité pour des raisons de sécurité', {
                        labels: {
                            Ok: 'Fermer'
                        }
                    });
                }
            });
        }
        function modifierRue() {
            var rueId = $('#rueValueModif').val();
            var rueModifName = $('#rueModif');
            var rueModifValide = rueModifName.parsley().isValid();
            if (rueModifValide) {
                var name = rueModifName.val();
                var urlVerif = '{{ path('rue_edit', {'id': 'iD'}) }}';
                urlVerif = urlVerif.replace('iD', rueId);
                $.ajax({
                    async: true,
                    type: "POST",
                    url: urlVerif,
                    data: "newname=" + name,
                    success: function (json) {
                        if (json.success === false) {
                            window.Parsley.addValidator('ruemodif', {
                                validateString: function () {
                                    return false;
                                },
                                messages: {
                                    en: 'Erreur de modifiacation de la rue.',
                                    fr: "Erreur de modification de la rue."
                                }
                            });
                            rueModifName.on('change', function () {
                                window.Parsley.addValidator('ruemodif', {
                                    validateString: function () {
                                        return true;
                                    }
                                });
                                rueModifName.parsley().validate();
                            });
                        } else {
                            window.Parsley.addValidator('ruemodif', {
                                validateString: function () {
                                    return true;
                                }
                            });
                            UIkit.modal.alert('La rue a été modifiée avec succès', {
                                labels: {
                                    Ok: 'Fermer'
                                }
                            });
                        }
                        rueModifName.parsley().validate();
                        refreshGouvernorats($('#gouvernorat'));
                    },
                    error: function () {
                        rueModifName.parsley().validate();
                    }
                });
            }
            else {
                rueModifName.parsley().validate();
            }
        }
        function validateRue() {
            var domrueModif = $('#rueModif');
            var oldrueName = domrueModif.val().toUpperCase();
            domrueModif.on('change', function () {
                var ruename = domrueModif.val().toUpperCase();
                var url = '{{ path('rue_byname', {'name': 'namE'}) }}';
                url = url.replace('namE', ruename);
                if (ruename !== oldrueName) {
                    $.ajax({
                        async: true,
                        type: "POST",
                        url: url,
                        success: function (json) {
                            if (json.success) {
                                window.Parsley.addValidator('ruemodif', {
                                    validateString: function () {
                                        return false;
                                    },
                                    messages: {
                                        en: 'Cette rue existe déjà',
                                        fr: "Cete rue existe déjà"
                                    }
                                });
                            } else {
                                window.Parsley.addValidator('ruemodif', {
                                    validateString: function () {
                                        return true;
                                    }
                                });
                            }
                            domrueModif.parsley().validate();
                        }
                    });
                }
            });
        }
        function refreshRues(select) {
            var url = '{{ path('rue_list') }}';
            var rues = select[0].selectize;
            rues.clearOptions();
            $.ajax({
                url: url,
                type: 'POST',
                success: function (data) {
                    if (data !== null) {
                        $.each(data, function (key, element) {
                            rues.addOption({
                                text: element.text,
                                value: element.value
                            });
                        });
                    }
                    else {
                        select.html("<option>No Data </option>");
                    }
                },
                error: function () {
                    select.html("<option>ERROR 500</option>");
                }
            });
        }
        function supprimerRue($id) {
            var url = '{{ path('rue_delete', {'id': 'iD'}) }}';
            url = url.replace('iD', $id);
            $.ajax({
                url: url,
                type: 'DELETE',
                success: function (json) {
                    if (json.success) {
                        UIkit.modal.alert('La rue a été supprimée avec succès.', {
                                    labels: {
                                        Ok: 'Fermer'
                                    }
                                }
                        ).on('hide.uk.modal', function () {
                            refreshRues($('#rue'));
                        });
                    }
                    else {
                        UIkit.modal.alert('Vous n\'avez pas le droit de supprimer cette rue pour des raisons de sécurité', {
                            labels: {
                                Ok: 'Fermer'
                            }
                        });
                    }
                },
                error: function () {
                    UIkit.modal.alert('Vous n\'avez pas le droit de supprimer cette rue pour des raisons de sécurité', {
                        labels: {
                            Ok: 'Fermer'
                        }
                    });
                }
            });
        }
        function modifierAdresse() {
            var adresseId = $('#adresseValueModif').val();
            var adresseModifName = $('#adresseModif');
            var adresseModifValide = adresseModifName.parsley().isValid();
            if (adresseModifValide) {
                var urlVerif = '{{ path('adresse_edit', {'id': 'iD'}) }}';
                urlVerif = urlVerif.replace('iD', adresseId);
                $.ajax({
                    async: true,
                    type: "POST",
                    url: urlVerif,
                    data: "newname=" + $name,
                    success: function (json) {
                        if (json.success === false) {
                            window.Parsley.addValidator('adressemodif', {
                                validateString: function () {
                                    return false;
                                },
                                messages: {
                                    en: 'Erreur de modifiacation de l\'adresse.',
                                    fr: "Erreur de modification de l'adresse."
                                }
                            });
                            adresseModifName.on('change', function () {
                                window.Parsley.addValidator('adressemodif', {
                                    validateString: function () {
                                        return true;
                                    }
                                });
                                adresseModifName.parsley().validate();
                            });
                        } else {
                            window.Parsley.addValidator('adressemodif', {
                                validateString: function () {
                                    return true;
                                }
                            });
                            UIkit.modal.alert('L\'adresse a été modifiée avec succès', {
                                labels: {
                                    Ok: 'Fermer'
                                }
                            });
                        }
                        adresseModifName.parsley().validate();
                        refreshGouvernorats($('#gouvernorat'));
                    },
                    error: function () {
                        adresseModifName.parsley().validate();
                    }
                });
            }
            else {
                adresseModifName.parsley().validate();
            }
        }
        function refreshAdresses(select) {
            var url = '{{ path('adresse_list') }}';
            var adresses = select[0].selectize;
            adresses.clearOptions();
            $.ajax({
                url: url,
                type: 'POST',
                success: function (data) {
                    if (data !== null) {
                        $.each(data, function (key, element) {
                            adresses.addOption({
                                text: element.text,
                                value: element.value
                            });
                        });
                    }
                    else {
                        select.html("<option>No Data </option>");
                    }
                },
                error: function () {
                    select.html("<option>ERROR 500</option>");
                }
            });
        }
        function supprimerAdresse($id) {
            var url = '{{ path('adresse_delete', {'id': 'iD'}) }}';
            url = url.replace('iD', $id);
            $.ajax({
                url: url,
                type: 'DELETE',
                success: function (json) {
                    if (json.success) {
                        UIkit.modal.alert('L\'adresse a été supprimée avec succès.', {
                                    labels: {
                                        Ok: 'Fermer'
                                    }
                                }
                        ).on('hide.uk.modal', function () {
                            refreshAdresses($('#adresse'));
                        });
                    }
                    else {
                        UIkit.modal.alert('Vous n\'avez pas le droit de supprimer cette adresse pour des raisons de sécurité', {
                            labels: {
                                Ok: 'Fermer'
                            }
                        });
                    }
                },
                error: function () {
                    UIkit.modal.alert('Vous n\'avez pas le droit de supprimer cette adresse pour des raisons de sécurité', {
                        labels: {
                            Ok: 'Fermer'
                        }
                    });
                }
            });
        }
        function getVillesForTree() {
            var gov = $('#gouvernorats').val();
            var data = '{{ path('gouvernorat_map' , {'id' : '_ID'}) }}';
            data = data.replace('_ID' , gov);
            $("#tree").fancytree({
                source: {
                    url: data
                },
                icon: false,
                keyboard: true,
                quicksearch: false,
                tooltip: false,
                strings: {
                    loading: "Chargement ...",
                    loadError: "Erreur de chargement"
                },
                click: function (event, data) {
                    var tt = $.ui.fancytree.getEventTargetType(event.originalEvent);
                    if (tt !== 'expander' && data.node.getLevel() === 4) {
                        fillDataTable(data.node.key);
                    }
                }
            });

        }
    </script>

    {% endjavascripts %}

{% endblock %}