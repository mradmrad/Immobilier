<?php

namespace SBC\ReclamationBundle\Repository;
use SBC\ReclamationBundle\Entity\Reclamation;

/**
 * ReclamationRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ReclamationRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * @return string
     */
    public function generateCode(){
        $lastIssue = $piece = $this->findOneBy(array(), array('id' => 'DESC'));
        $newID = ($lastIssue == null) ? 0 : $lastIssue->getId();;
        $newID++;
        return 'REC-'.date("Y").'-'.$newID;
    }

    /**
     * @return null|string
     * @throws \Doctrine\ORM\NoResultException
     * @throws \Doctrine\ORM\NonUniqueResultException
     */
    private function getLastReclamation(){
        $qb = $this->createQueryBuilder('r');
        $qb->select('r, MAX(r.id) as idMax');
        return $qb->getQuery()->getSingleResult()['idMax'];
    }

    /**
     * @param mixed $id
     * @param null $lockMode
     * @param null $lockVersion
     * @return mixed
     * @throws \Doctrine\ORM\NonUniqueResultException
     */
    public function find($id, $lockMode = null, $lockVersion = null)
    {
        $qb = $this->createQueryBuilder('r');
        $qb
            ->select('r, u, p, a, c')
            ->join('r.user', 'u')
            ->join('u.personnel', 'p')
            ->leftJoin('r.attachments', 'a')
            ->leftJoin('r.comments', 'c')
            ->where('r.id = :id')
            ->setParameter('id', $id)
        ;

        return $qb->getQuery()->getOneOrNullResult();
    }
}
