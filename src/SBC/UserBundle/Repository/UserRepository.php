<?php

namespace SBC\UserBundle\Repository;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends \Doctrine\ORM\EntityRepository
{
    public function findAll($enabled = null)
    {
        $query = $this->createQueryBuilder('u')
            ->leftJoin('u.personnel', 'p')
            ->addSelect('p')
            ->leftJoin('p.address', 'a')
            ->addSelect('a')
            ->leftJoin('p.agency', 'ag')
            ->addSelect('ag')
            ->orderBy('u.id', 'DESC')
            ;

        if (isset($enabled)) {

            $query->where('u.enabled = ?1')
                ->setParameters(array(1 => $enabled))
                ;
        }


        return $query->getQuery()
            ->getResult();
    }


    public function find($id, $lockMode = null, $lockVersion = null)
    {
        $query = $this->createQueryBuilder('u')
            ->leftJoin('u.personnel', 'p')
            ->addSelect('p')
            ->leftJoin('p.taches', 'taches')
            ->addSelect('taches')
            ->leftJoin('taches.typeTache', 'type_tache')
            ->addSelect('type_tache')
            ->leftJoin('p.address', 'a')
            ->addSelect('a')
            ->leftJoin('p.agency', 'ag')
            ->addSelect('ag')
            ->leftJoin('p.meetings', 'meetings')
            ->addSelect('meetings')
            ->where('u.id = ?1')
            ->setParameters(array(1 => $id))
            ->getQuery();

        return $query
            ->getOneOrNullResult();
    }

    public function findOneBy(array $criteria, array $orderBy = null)
    {
        $query = $this->createQueryBuilder('u')
//            ->leftJoin('u.accesses', 'accesses')
//            ->addSelect('accesses')

            ->leftJoin('u.personnel', 'p')
            ->addSelect('p')
            ->leftJoin('p.address', 'a')
            ->addSelect('a')
            ->leftJoin('p.agency', 'ag')
            ->addSelect('ag')
            ->leftJoin('p.taches', 'taches')
            ->addSelect('taches')
            ->leftJoin('taches.typeTache', 'type_tache')
            ->addSelect('type_tache')
            ->leftJoin('p.meetings', 'meetings')
            ->addSelect('meetings');

        $i = 0;
        foreach ($criteria as $key => $value) {
            if ($i == 0)
                $query->where('u.' . $key . ' = :value');
            else
                $query->andWhere('u.' . $key . ' = :value');
            $query->setParameter('value', $value);
            $i++;
        }
        return $query->getQuery()->getOneOrNullResult();
    }
}
